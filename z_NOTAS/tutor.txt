1-
Un detallito, port del console log est√° en minusculas pero no existe esa variable en minuscula, 
asi que la pase a mayus para que funcione üòÅ

2-
Te dejo un enlace con un comprimido, con el archivo de la clase de productos, 
el de sus rutas y el archivo txt de producto (este en principio si no se modifica el metodo de lectura,  
si o si minimo para arrancarlo tendria que tener un [])

en el archivo.txt si o si tiene que comenzar con un []

Sugiero que lo revises, para ver posibles reemplzaos de lo que realizaste y 
asi poder mejorarlo, usando el archivo siempre con los ultimos cambios. 
Vas a tener que igualmente agregar algunas cosas para cubrir las 
validaciones por ejemplo las respuestas, si no existe etc.

Espero puedas avanzarlo, cualquier cosa me consultas. 
Ah, y en base a estas correcciones y lo que agregues, 
revisar la parte de carrito para que tenga la misma funcionalidad. 

-----------------------------------------------------------------------------------

Estuve mirando algo. Ojo con el uso de try catch en las clases. Siempre se debe exportar algo, 
y no tenerllo dentro de un try catch, eso puede generar errores.
Si lo usaste para manejar la conexi√≥n de mongo y firebase no esta mal, 
pero tiene que estar todo en una funcion y sin afectar a la clase, o por fuera o dentro en un metodo
el export tiene que quedar limpio

-------------------------------------------------------------------------------------

mmm estuve mirando cmo lo haces con mongo y archivo. No seria tan distinto, dependiendo de la forma en que quieras hacerlo.
Para memoria accedes al this. Si al metodo lo trabajas sobre la clase padre
Si lo trabajas en la derivada, podes acceder mediante super.
Por ejemplo si en el constructor del contendor de memoria tenes guardado el array en this.elementos
Para acceder en la derivada haces super.elementos. Y ya con eso podes trabajar sobre el array*

Ah pero ya te entendi. Lo que me comentas es que queres buscar ese producto por id.
para asi meterlo al carrito
claro, tambien dependera de como lo quieras hacer o como lo hiciste

Podes importar la instancia creada, o hacer una funcion por fuera de la clase (quedaria mejor en mi opinion)
Y si no se quiere crear cosas de m√°s, en un punto central como la ruta misma
Buscas el producto
Buscas el carrito
Le actualizas los productos y reemplazas el viejo carrito por el nuevo
Para firebase, podrias dentro del mismo dao de carrito acceder a esa coleccion. Creo que sin problemas
no accederias a this.collection si no que a db.collection(‚Äòcarrito‚Äô)
esa es una, otra seria hacer algo similar a memoria.

-----------------------------------------------------------------------------------------------------------